---
layout: post
title:  "Completing the #30DayMapChallenge"
date:   2020-12-01 12:00:00 +0100
tags: [GIS, cartography, QGIS, R, Blender]
permalink: /blog/:title.html
image: /assets/img/30DayMapChallenge-2020/header.png
---

Once again this year I joined in the #30DayMapChallenge on Twitter, publishing a map every day of November based on [themes](https://github.com/tjukanovt/30DayMapChallenge) provided by Topi Tjukanov. For the final day of the challenge, participants are encouraged to collect their entries from the challenge to a common gallery, hence the page you are currently reading! I published a similar thing with the maps I produced last year [here]({% post_url 30daymapchallenge-2020 %}).

I've tried to include information about the data + tools I used to produce each map, which may or may not be of interest to anyone.

Click below to go to a specific topic's map, or scroll down to see the full set. Most of the images are nice and big so feel free to open each in a new tab should you want to admire them in full detail!

* toc
{:toc}

# Points

I was inspired by Klas Karlsson's [halftone style](https://plugins.qgis.org/styles/106/) using geometry generators in QGIS, and tried visualising multiple datasets in the style …but fairly quickly ran into the limits the technique as QGIS ground to a halt. Not before working out an expression to rotate a grid of points, mind you, which took me far longer than I'd care to admit. For reference, the key bit is: 
```
cos(@rotation)*(@x_pos-@x_centroid)+(@y_pos-@y_centroid)*sin(@rotation)+@x_centroid, 
-sin(@rotation)*(@x_pos-@x_centroid)+cos(@rotation)*(@y_pos-@y_centroid)+@y_centroid)
```
The more you know!

# Lines

Whiling away the finite hours of my life reading Wikipedia, I came across a [map](https://commons.wikimedia.org/wiki/File:United_Kingdom_A_road_zones.svg) purporting to show different regions for the UK's numbered roads. Immediately I questioned its accuracy: I live firmly within the '1' zone, and while it is true that most of my local numbered roads begin with 1 I'm also a frequent driver on the local A428, A505, and A603, so surely the regions mapped can't be accurate. Naturally, the only course of action was to map out this hypothesis myself, using data from Ordnance Survey's [Open Zoomstack](https://www.ordnancesurvey.co.uk/business-government/products/open-zoomstack). The answer is that the Wikipedia map is *mostly* accurate, although there is definitely some overlap:

 
# Polygons

A pretty simple map of Barcelona made with data from [sedecatastro.gob.es](http://sedecatastro.gob.es). Coloured in QGIS with this expression for the polygon fill colour:

```
with_variable('color', rand(1,5), 
CASE WHEN 
	@color = 1
	THEN '#AC0045'
	WHEN
	@color = 2
	THEN '#004D95'
	WHEN
	@color = 3
	THEN '#F2BB32'
	WHEN
	@color = 4
	THEN '#FFED3F'
	WHEN
	@color = 5
	THEN '#E40036'
	END
)
```

Normally the Brit in me would compulsively change 'color' to 'colour', but the 'color' in the expression isn't a vulgar American 'color', it's a sophistocated Spanish 'color', or perhaps an autonomous Catalan 'color'. Also don't you think the north arrow is kinda neat?
 
# Hexagons

Median house prices in England and Wales 1995 to 2020, mapped in a hexagonal cartogram such that the areas of the hexagons are (roughly) proportional to their population

image

This was the kind of thing which seemed way simpler in my head compared to the experience of making it. I used the Temporal Controller in QGIS to make the animation, then exported it into R to make the histogram/legend and put it all together. [The data](https://www.ons.gov.uk/peoplepopulationandcommunity/housing/datasets/hpssadataset2medianhousepricebymsoaquarterlyrollingyear) was from the ONS, and the [excellent hexagon cartogram](https://github.com/houseofcommonslibrary/uk-hex-cartograms-noncontiguous) was from the 
House of Commons Library.


 
# Data challenge 1: OpenStreetMap

/Users/matthewlaw/Documents/GitHub/matthew-law.github.io/assets/img/30DayMapChallenge-2021/Road-Grids-Southern-Ontario.png


Like many of the best things in life, this map started with armchair travelling in Google Maps. I'd noticed that roads in the southern part of the Canadian province of Ontario were arranged in grids, but that there were a number of misaligned grids throughout the region

/Users/matthewlaw/Documents/GitHub/matthew-law.github.io/assets/img/30DayMapChallenge-2021/Ontario-gmaps.jpeg

To define the area I looked at the different administrative boundaries (`admin_level` 5 and 6 in OSM) and from these picked the ones I thought delineated the 'griddiest' area (very scientific, I know). Initially I tried getting the data into QGIS with the QuickOSM plugin but found that because the features were quite large the query often timed out, so I switched to using [overpass turbo](https://overpass-turbo.eu/).
I only wanted the roads which actually formed the grids (I know nothing of Canadian geography or history but Wikipedia leads me to believe these may be  [concession roads](https://en.wikipedia.org/wiki/Concession_road)): through trial and error I settled on including everything on OpenStreetMap tagged `highway=motorway`, `highway=trunk`, `highway=primary`, or `highway=secondary` within the area of interest.

It was fun trying to reverse-engineer a methodology to try to get the different grid areas from just the roads - the basic Python methodology ended up being:

- use the roads and land outline to create enclosures (polygons bounded by roads/boundary of study area)
- calculate the orientation of eacch of these enclosures (technically, the orientation of the longest axis of their binding rectangles) using Martin Fleischmann's excellent [`momepy` package](http://docs.momepy.org/en/stable/index.html), rounding these values to the nearest 5°
- define as 'neighbours' of each enclosure: all enclosures that border a given enclosure (ie its direct neighbours), all enclosures that border the enclosures that border a given enclosure (ie its neighbours' neighbours), and all other enclosures within 15 km
- get the modal orientation value (the one calculated in step two) for each enclosure + its neighbours (as defined above)

The full Python code used to make the map is available in a Jupyter notebook [here](https://github.com/matthew-law/30DayMapChallenge2021/blob/main/grids/grids.ipynb), albeit you'll need to provide your own data to reproduce it. If you do get that far though, you can use the `.explore()` method in `geopandas` to interactively explore the data:

/Users/matthewlaw/Documents/GitHub/matthew-law.github.io/assets/img/30DayMapChallenge-2021/GDF.explore().jpeg

An interesting point of comparison is this figure from "The Land Surveys Of Ontario 1750–1980", an article by Louis M. Sebert in a 1980 edition of the journal Cartographica ([doi: 10.3138/X1G3-5822-25G2-027M](https://doi.org/10.3138/X1G3-5822-25G2-027M)) which gives a bit of insight into how the grids ended up this way:

/Users/matthewlaw/Documents/GitHub/matthew-law.github.io/assets/img/30DayMapChallenge-2021/Township-Survey-Systems.png
 
# Green

/Users/matthewlaw/Documents/GitHub/matthew-law.github.io/assets/img/30DayMapChallenge-2021/Green-Landscapes-UK.png

A map of 'Green Landscapes of the United Kingdom': National Parks, AONBs, National Scenic Areas (basically Scottish AONBs), and assorted green belts.

Made with QGIS and data from various places:

- National Parks from the [ONS via data.gov.uk](https://data.gov.uk/dataset/c825e4a3-c79b-4f22-b064-1ae58548ccb0/national-parks-december-2018-boundaries-gb-bfc) 
- AONBs from [Natural England](https://data.gov.uk/dataset/8e3ae3b9-a827-47f1-b025-f08527a4e84e/areas-of-outstanding-natural-beauty-england), [Natural Resources Wales](https://data.gov.uk/dataset/b40871c7-ab45-44f1-8989-47f872e4a9da/areas-of-outstanding-natural-beauty-aonbs), and [OpenDataNI](https://data.gov.uk/dataset/f803cb72-e3d2-44df-8a0c-19a496bd7a5d/areas-of-outstanding-natural-beauty)
- National Scenic Areas (basically Scotland's AONBs) from [gov.scot](https://www.spatialdata.gov.scot/geonetwork/srv/eng/catalog.search#/metadata/13396739-7602-4428-85fd-95a5d7e208a1)
- Intractable urban sprawl from [OS Open Zoomstack](https://www.ordnancesurvey.co.uk/business-government/products/open-zoomstack)
- UK outline from [Natural Earth](https://www.naturalearthdata.com/)
 
 
# Monochrome

/Users/matthewlaw/Documents/GitHub/matthew-law.github.io/assets/img/30DayMapChallenge-2021/Pigs-of-Europe.png

A fairly simple univariate map: the number of pigs per thousand people, visualised with points: denser points = more pigs per capita. I got the data from [Eurostat](https://appsso.eurostat.ec.europa.eu/nui/show.do?dataset=ef_lsk_gpig) (one of the mythical Brexit dividends is that since leaving Eurostat the UK is excluded from these kinds of map) via the [eurostat](https://ropengov.github.io/eurostat/) R package.

To link the point density to the pigs per person, I used the Expression String Builder in QGIS – I played around with this for a bit to get a satisfactory spread of density

/Users/matthewlaw/Documents/GitHub/matthew-law.github.io/assets/img/30DayMapChallenge-2021/pig-points.jpeg

One of the surprises of the challenge was that this map highlighted the Spanish region of Aragon as the pig capital of Europe – I didn't give this fact much thought when making the map but it subsequently found its way to Aragonese Twitter, and so for a few days my replies were filled with Spanish comments on the map.
 
# Raster

I returned to an earlier idea and visualised three different raster layers as halftones:

/Users/matthewlaw/Documents/GitHub/matthew-law.github.io/assets/img/30DayMapChallenge-2021/raster.png

Data glued together from:
- Temperature: NOAA Earth System Research Laboratories
- Elevation: USGS GMTED2010 Global Grids
- Population: Global Human Settlement Layer

I'm not entirely happy with how the blending worked – to my eye there isn't that much distinction between cyan and the mixture of cyan and yellow.
 
# 3D

A quick experiment with [rayvista](https://github.com/h-a-graham/rayvista), a plugin for the excellent [rayshader](https://www.rayshader.com/) R package: a spinning view of Devils Tower, Wyoming.

/Users/matthewlaw/Documents/GitHub/matthew-law.github.io/assets/img/30DayMapChallenge-2021/Devils-Tower.mp4

R code for it [here](https://raw.githubusercontent.com/matthew-law/30DayMapChallenge2021/main/3D/Devils%20Tower%20rayvista.R).

# Population

A cartogram of European population, produced in R with data from Eurostat.

/Users/matthewlaw/Documents/GitHub/matthew-law.github.io/assets/img/30DayMapChallenge-2021/population-cartogram.png

R code [here](https://raw.githubusercontent.com/matthew-law/30DayMapChallenge2021/main/cartogram/cartogram.R).
 
# Map with a new tool

Inspired by [Owen Powell's excellent Blender creations](https://owenpowell.wordpress.com/30-day-map-challenge-2020/) over the course of last year's challenge, I had a go using Blender for the first time, mapping the area around Seathwaite Tarn in the Lake District.

/Users/matthewlaw/Documents/GitHub/matthew-law.github.io/assets/img/30DayMapChallenge-2021/Seathwaite.png

I used 1m DTMs from [DEFRA](https://environment.data.gov.uk/DefraDataDownload/) and [OS Open Zoomstack](https://www.ordnancesurvey.co.uk/business-government/products/open-zoomstack) for the water and forest features.

 
# Urban/rural

A first experiment using [mapdeck](https://symbolixau.github.io/mapdeck/index.html), an R wrapper for [deck.gl](https://deck.gl/) and [Mapbox](https://www.mapbox.com/), to create an interactive web map of a thoroughly urban chunk of Barcelona

<iframe src="https://matthewlaw.xyz/mapdeck-experiment/"></iframe>

Full-page version [here](https://matthewlaw.xyz/mapdeck-experiment/)

Made with data from [sedecatastro.gob.es](http://sedecatastro.gob.es).

R code [here](https://raw.githubusercontent.com/matthew-law/30DayMapChallenge2021/main/urban/mapdeck.R)
 
# Island(s)

The island of Pohnpei, Micronesia made in QGIS with data from OSM (features), USGS (DEM), and GEBCO (bathymetry). Featuring the [BellTopo Sans](https://www.sarahbellmaps.com/belltopo-sans-font-by-sarah-bell/) font by Sarah Bell.

/Users/matthewlaw/Documents/GitHub/matthew-law.github.io/assets/img/30DayMapChallenge-2021/Pohnpei.png
 
# Boundaries

Historical and Current Counties of Great Britain

Using [Boundary-Line data](https://ordnancesurvey.co.uk/business-government/products/boundaryline) from Ordnance Survey
 
# Data challenge 3: GHSL Global Human Settlement Layer

Human Population in the Northeast Megalopolis
 
# Historical map

10th to 15th April 1912
 
# Interactive map

https://matthewlaw.xyz/green-London-map/
 
# Choropleth map



# Heatmap


 
# Metamapping day

This blog post. Pretty meta, right?

<br>

---

